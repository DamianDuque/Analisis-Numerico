Cap1: Bisección, punto fijo, regla falsa, Newton, secante, raíces múltiples. 


Cap2: Jacobi, Gauss seidel, Sor. 


Cap3: vandermonde, Newton interpolante, Lagrange,  spline lineal y cúbico.




A = [8 5 6; -2 13 1; -1 -1 4];

x=[0 4 3 1]'; %3 3.7 4.4
y=[0 5 5 4]'; %6 10 15


x = 3.2 3.8 4.2 4.5
y = 5.12 6.42 7.25 6.85


Cada método debe pedir las entradas y entregar tablas de salida, en  el capítulo 1 y en el 3 se debe entregar la gráfica de la función y los polinomios de interpolación respectivamente, En el capitulo 2 de entregar el radio espectral y mencionar si el método converge o nó según este radio. La sustentación la realiza todo el grupo presencial en el horario de clase. Yo les estaré informando la hora de la cita a cada grupo. Por último, recuerden que lo entrega un solo integrante del grupo, y poner quienes son los demás integrantes en la entrega.


while error > Tol && c < niter
                T = inv(D - w * L) * ((1 - w) * D + w * U);
                C = w * inv(D - w * L) * b;
                x1 = T * x0 + C;

                % Calcular el error relativo
                E = norm((x1 - x0) ./ x1, 'inf');

                % Almacenar los valores en los arrays
                iteraciones(c + 1) = n;
                x1_vals(c + 1, :) = x1';
                error_vals(c + 1) = E;

                error = E;
                x0 = x1;
                c = c + 1;

                n = n + 1;
            end

            % Redimensionar los arrays para eliminar los elementos no utilizados
            iteraciones = iteraciones(1:c);
            x1_vals = x1_vals(1:c, :);
            error_vals = error_vals(1:c);

            % Crear la tabla utilizando array2table y establecer nombres de variables
            tabla = array2table([iteraciones', x1_vals, error_vals'], 'VariableNames', ...
                [{'n'}, strcat('x', arrayfun(@num2str, 1:numel(x0), 'UniformOutput', false)), 'Error']);

            if error < Tol
                s = x0;
                fprintf('Es una aproximación de la solución del sistema con una tolerancia = %f\n', Tol);
                app.SORTabla.Data = tabla;
            else
                s = x0;
                app.SORTabla.Data = tabla;
            end